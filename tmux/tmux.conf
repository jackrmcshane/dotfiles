# =========================================================================
# ============================ settings ===================================
# =========================================================================

# unbind default prefix
unbind-key C-b
# bind new prefix combo
set -g prefix C-a

# windows and panes begin indexing at 1
set -g base-index 1
setw -g pane-base-index 1

set -sg escape-time 0


# set startrent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I. #W"


# =========================================================================
# ======================== key bindings ===================================
# =========================================================================

unbind "\$" # rename-session
unbind ,    # rename window
unbind %    # split-window -h
unbind '"'  # split window
unbind \}    # swap-pane -D
unbind \{    # swap-pane -U
unbind "'"  # select window
unbind n    # next window
unbind p    # previous window
unbind l    # last window
unbind M-n  # next window with alert
unbind M-p  # previous window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list buffer
unbind =    # choose-buffer
# unbind z    # zoom pane
unbind M-Up # resize 5 rows up
unbind M-Down
unbind M-Right
unbind M-Left


# edit config and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Reloaded ~/.tmux.conf\"'"
# reload tmux config
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# retain current working dir on window spawn
bind c new-window -c "#{pane_current_path}"

# prompt to rename window following creation
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# renaming window and session
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# split panes
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# pane and window nav
bind -r J previous-window
bind -r K next-window
bind -r k select-pane -t :.-
bind -r j select-pane -t :.+
bind -r Tab last-window # cycle through MRU tabs
bind -r C-o swap-pane -D

# swap panes back and forth with 1st pane
# when in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \\ if '[ #{pane_index} -eq 1 ]' \
    'swap-pane -s "!"' \
    'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window

# detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'



setw -g mode-keys vi

bind C-p choose-buffer
